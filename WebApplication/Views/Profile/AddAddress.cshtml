@model WebApplication.Models.AddressViewModel

@{
    ViewBag.Title = "Add Address";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Address</h2>

@using (Html.BeginForm("AddAddress", "Profile", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.OwnerId)
    @Html.HiddenFor(m => m.OwnerType)
    <div class="form-horizontal">
        <h4>@{ 
                if (ViewBag.AlterButtonTitle == true)
                {
                    "Restaurant".ToString();
                }
            }
            Address
            </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Line1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Line1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Line1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Line2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Line2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Line2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegionAlias, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RegionAlias, // 1. Store selected value in Model.State;
                // when page is rendered after postback,
                // take selected value from Model.State.

                // 2. Take list of values from Model.States
                Model.RegionAliases,

                // 3. Text for the first 'default' option
                "- Please select a province -",

                //4. A class name to assign to <select> tag
                new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (ViewBag.AlterButtonTitle == true)
                {
                    <input type="submit" value="Next" class="btn btn-default" />
                }
                else
                {
                    <input type="submit" value="Create" class="btn btn-default" />
                }
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ProfileView")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
